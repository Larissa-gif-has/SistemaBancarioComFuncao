def menu():
    while True:
        opcoes = """1. DEPOSITAR
2. SACAR
3. EXTRATO
4. CRIAR USUÁRIO
5. CRIAR CONTA
6. FILTRAR USUÁRIO
7. LISTAR CONTA
8. SAIR DO SISTEMA
>>> """
        return opcoes


def depositar(saldo, valor, extrato, /):
    from datetime import datetime
    if valor <= 0:
        print('\033[0;31mValor de depósito invalido! Tente novamente\033[m')
    else:
        data_hora = datetime.now().strftime('%d/%m/%Y %H:%M:%S')
        saldo += valor
        extrato += f"\n{'Depósito:':<10} \033[0;35mR$ {valor:>8.2f}\033[m - {data_hora}\n"
        print(f'Depósito no valor de R$\033[0;34m{valor:.2f}\033[m realizado com sucesso.')
    return saldo, extrato


def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    from datetime import datetime
    if valor <= 0:
        print('\033[0;31mValor inválido! Tente novamente\033[m')
    elif valor > saldo:
        print('\033[0;31mOperação falhou.Voce não tem saldo suficiente\033[m')
    elif valor > limite:
        print('\033[0;31mOperação falhou. O valor do saque excede o limite\033[m')
    elif numero_saques >= limite_saques:
        print('\033[0;31mOperação falhou. Número máximo de saques excedido\033[m')
    else:
        if valor == 500:
            numero_saques += 1
        saldo -= valor
        data_hora = datetime.now().strftime('%d/%m/%Y %H:%M:%S')
        extrato += f"\n{'Saque:':<10} \033[0;35mR$ {valor:>8.2f}\033[m - {data_hora}\n"
        print(f'Saque no valor de R$\033[0;34m{valor:.2f}\033[m realizado com sucesso!')
    return saldo, extrato, numero_saques


def exibir_extrato(saldo, /, *, extrato):
    print('-' * 40)
    print('\033[0;34mEXTRATO DEPÓSITO BANCÁRIO\033[m ')
    print(f'TRANSAÇÕES: {extrato}')
    print(f'SALDO ATUAL: {saldo:>8.2f}')
    print('-' * 40)


usuarios = {}
def criar_usuario(usuarios):
    print('-' * 51)
    consultar = input('Informe o CPF para consultar a conta:')
    print('-' * 51)
    if consultar in usuarios:
        print("\033[0;31mEste CPF já está cadastrado!\033[m")
        return usuarios
    else:
        cpf = input('Informe seu CPF (somente números): ')
        nome = input('Irforme o nome completo:')
        data_nascimento = input('Informe a data de nascimento (dd-mm-aaaa):')
        usuarios[cpf] = {"nome": nome,
                         "data de nascimento": data_nascimento,
                         "contas": []} 
        print(f'Usuário do CPF:\033[0;34m{cpf}\033[m criado com sucesso.')
    return usuarios


def filtrar_usuario(cpf, usuarios):
    for chave, valor in usuarios.items():
        if chave == cpf:
            return valor  #retorna o valor caso encontre o usuário
    print("\033[0;31mCPF não encontrado! Tente novamente.\033[m")
    return None


numero_conta = []
def criar_conta(agencia, numero_conta, usuarios):
    import random
    cpf = input('Qual o CPF para gerar a conta? ')
    usuario = filtrar_usuario(cpf, usuarios)
    if usuario:
        while True:
            contas_geradas = str(random.randint(100000, 999999))
            cinco_digitos = contas_geradas[:5]
            digito_final = contas_geradas[5]
            conta = f'{cinco_digitos}-{digito_final}'
            if conta not in numero_conta:
                break
        nova_conta = {"conta": conta, "agencia": agencia}
        usuarios[cpf]["contas"].append(nova_conta)
        numero_conta.append(nova_conta)
        print(f'Conta: \033[0;34m{nova_conta["conta"]}\033[m '
              f'Agencia: \033[0;34m{nova_conta["agencia"]}\033[m do CPF: \033[0;35m{cpf}\033[m Criada com sucesso!')
    return usuarios


def listar_usuarios(usuarios):
    print('LISTAGEM DE CONTAS:')
    for cpf, dados, in usuarios.items():#percorre todos o usuarios
        for conta in dados["contas"]:
            print(f'CPF: \033[0;35m{cpf:<15}\033[m | '
                  f'Nome: \033[0;35m{dados["nome"]:<20}\033[m | '
                  f'Conta: \033[0;35m{conta["conta"]:<10}\033[m | '
                  f'Agência: \033[0;35m{conta["agencia"]:<5}\033[m')
            print()


#PROGRAMA PRINCIPAL
limite = 500
limite_saques = 3
numero_saques = 0
saldo = 0
saque = 0
extrato = ""
agencia = '0001'
while True:
    print('-' * 51)
    opcao = float(input(menu()))
    print('-' * 51)
    if opcao == 1:
        valor = int(input('Qual o valor do depósito?'))
        saldo, extrato = depositar(saldo, valor, extrato)
    elif opcao == 2:
        valor = int(input('Qual o valor de saque?'))
        saldo, extrato, numero_saques = sacar(
            saldo=saldo,
            valor=valor,
            extrato=extrato,
            limite=limite,
            numero_saques=numero_saques,
            limite_saques=limite_saques)
    elif opcao == 3:
        exibir_extrato(saldo, extrato=extrato)
    elif opcao == 4:
        usuarios = criar_usuario(usuarios)
    elif opcao == 5:
        usuarios = criar_conta(agencia, numero_conta, usuarios)
    elif opcao == 6:
        cpf = input('Qual o CPF para gerar a conta?')
        consult = filtrar_usuario(cpf, usuarios)
    elif opcao == 7:
        listar_usuarios(usuarios)
    elif opcao == 8:
        print('Encerrando sessão...')
