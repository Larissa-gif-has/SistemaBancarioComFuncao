from datetime import datetime
import random

menu = """\033[0;32m[ 1 ] - DEPOSITAR
[ 2 ] - SACAR 
[ 3 ] - EXTRATO 
[ 4 ] - NOVO USÚARIO
[ 5 ] - FILTRAR USÚARIO
[ 6 ] - EXCLUIR CONTA
[ 7 ] - SAIR\033[m
>>> """


def depositar(valor, saldo, extrato):
    if valor > 0:
        saldo += valor
        extrato += valor
        print(f'\033[0;34mDeposito no valor de R${valor:.2f} Efetuado com sucesso\033[m')
    else:
        print(' \033[0;31mValor invalido. Tente novamente\033[m')
    return saldo, extrato


def sacar(saldo, valor, saque, extrato, limite, numero_saques, limite_saques):
    if valor == 500:
        numero_saques += 1

    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques > limite_saques
    if excedeu_saldo:
        print('\033[0;31mOperação falhou.Voce não tem saldo suficiente\033[m')
    elif excedeu_limite:
        print('\033[0;31mOperação falhou. O valor do saque excede o limite\033[m')
    elif excedeu_saques:
        print('\033[0;31mOperação falhou. Número máximo de saques excedido\033[m')
    elif valor > 0:
        saldo -= valor
        saque += valor
        print(f'\033[0;34mSaque no valor de R${valor:.2f} Efetuado com sucesso\033[m ')
    else:
        print(' \033[0;31mValor invalido. Tente novamente\033[m')
    return saldo, extrato, saque, numero_saques


def extrato_bancario(saldo, extrato=0, saque=0):
    print('\033[0;34mEXTRATO DEPÓSITO BANCÁRIO\033[m ')
    print(f'DEPÓSITO: R${extrato:,.2f}'.replace(',', 'X').replace('.', ',').replace('X', '.'))
    print(f'VALOR TOTAL DE SAQUE: R${saque:,.2f}'.replace(',', 'X').replace('.', ',').replace('X', '.'))
    print(f'SALDO ATUAL: R${saldo:,.2f}'.replace(',', 'X').replace('.', ',').replace('X', '.'))
    hoje = datetime.now()
    horario_formatado = hoje.strftime("%d/%m/%Y %H:%M:%S")
    print(f'HORÁRIO: {horario_formatado}')


def novo_usuario():
    cpf = input('Informe seu CPF (xxx.xxx.xxx-xx):')
    for usuario in usuarios:
        if usuario['cpf'] == cpf:
            cpf_existe = True
            print('\033[0;31mCPF já cadastrado! Tente novamente\033[m')
            break
    else:
        nome = input('Irforme o nome completo:')
        data_nascimento = input('Informe a data de nascimento (dd-mm-aaaa):')
        while True:
            numero_conta = str(random.randint(100000, 999999))
            if numero_conta not in contas_geradas:
                contas_geradas.append(numero_conta)
                break
        cinco_digitos = numero_conta[:5]
        digito_final = numero_conta[5]
        conta = f'{cinco_digitos}-{digito_final}'
        usuarios.append({'nome': nome,
                         'cpf': cpf,
                         'agencia': agencia,
                         'conta': conta})
        print('\033[0;35mUsúario cadastrado com sucesso\033[m')
        print(f'Conta gerada: {conta}')

def filtrar_usuario():
    consultar = input('Informe o CPF (xxx.xxx.xxx-xx) para consulta:')
    encontrado = 0
    for consult in usuarios:
        if consult['cpf'] == consultar:
            encontrado = True
            print(f'Nome: {consult["nome"]}')
            print(f'CPF: {consult["cpf"]}')
            print(f'Agencia: {consult["agencia"]}')
            print(f'Conta: {consult["conta"]}')
    if not encontrado:
        print('\033[0;31mCPF não existe ou foi excluído\033[m')


def remover_usuario():
    remover = input('Informe o CPF (xxx.xxx.xxx-xx)'
                    'ou número da conta para cancelamento:')
    encontrado = 0
    for remove in usuarios:
        if remove['cpf'] == remover or remove['conta'] == remover:
            encontrado = True
            usuarios.remove(remove)
            print(f'Conta com o {remover} excluído com sucesso ')
    if not encontrado:
        print('\033[0;31mCPF não existe ou foi excluído\033[m')


#PROGRAMA PRINCIPAL
limite = 500
limite_saques = 3
numero_saques = 0
saldo = 0
saque = 0
extrato = 0
usuarios = []
conta = []
contas_geradas = []
agencia = '0001'
while True:

    print('-' * 51)
    opcao = int(input(menu))
    print('-' * 51)
    if opcao == 1:
        valor = float(input('Qual o valor do depósito?'))
        saldo, extrato = depositar(valor, saldo, extrato)
    elif opcao == 2:
        valor = float(input('Qual o valor do saque?'))
        saldo, extrato, saque, numero_saques = sacar(
            saldo,
            valor,
            saque,
            extrato,
            limite,
            numero_saques,
            limite_saques)
    elif opcao == 3:
        extrato_bancario(saldo, extrato, saque)
    elif opcao == 4:
        novo_usuario()
    elif opcao == 5:
        filtrar_usuario()
    elif opcao == 6:
        remover_usuario()
    elif opcao == 7:
        print('SESSÃO FINALIZADA...')
        break
